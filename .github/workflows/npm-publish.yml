name: Publish to NPM

on:
  push:
    branches:
      - main  # Triggers on push to main branch
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual trigger from Actions tab

env:
  NODE_VERSION: 22.x

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for NPM provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run QA checks
        run: npm run qa

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Determine publish tag and version
        id: publish-info
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "tag=next" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Sync version from tag
        if: steps.publish-info.outputs.is_release == 'true'
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "$TAG_VERSION" ]; then
            echo "Aligning package.json version ($CURRENT_VERSION) -> $TAG_VERSION"
            npm version "$TAG_VERSION" --no-git-tag-version
          fi
      - name: Bump version for next tag
        if: steps.publish-info.outputs.is_release == 'false'
        run: |
          COMMIT_HASH="${{ github.sha }}"
          COMMIT_SHORT="${COMMIT_HASH:0:7}"
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION="${CURRENT_VERSION}-next.${COMMIT_SHORT}"
          npm version ${NEW_VERSION} --no-git-tag-version
          echo "Publishing version: ${NEW_VERSION}"

      - name: Publish to NPM
        run: npm publish --provenance --access public --tag ${{ steps.publish-info.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
